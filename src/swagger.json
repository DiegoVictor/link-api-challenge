{
  "openapi":"3.0.2",
  "info": {
    "title":"Pipedeals",
    "version":"1.0",
    "license": {
      "name": "MIT",
      "url": "https://raw.githubusercontent.com/DiegoVictor/pipedeals/master/LICENSE"
    }
  },
  "servers": [
    {
      "url":"http://localhost:3333/v1"
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "johndoe@example.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user":  {
                      "type": "object",
                      "title": "User",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "user": {
                    "_id": "6136a0d0dee6d726c8592507",
                    "email": "johndoe@example.com"
                  },
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMzZhMGQwZGVlNmQ3MjZjODU5MjUwNyIsImlhdCI6MTYzMDk3MDE4MiwiZXhwIjoxNjMxNTc0OTgyfQ.kSks24HR_FtCu2CuvEi22YgsoXf5Ko4eZLBhMa0ULWg"
                }
              }
            }
          },
          "400": {
            "description": "Error while logging in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "User not exists": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "User not exists",
                      "code": 440,
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  },
                  "User and/or password not match": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "User and/or password not match",
                      "code": 450,
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "User",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "johndoe@example.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Create new users"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "statusCode": 400,
                  "error": "Bad Request",
                  "message": "Email already in use",
                  "code": 140,
                  "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                }
              }
            }
          }
        }
      }
    },
    "/pipedrive/events": {
      "post": {
        "tags": ["Events"],
        "security": [
          {
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Event",
                "required": [
                  "event",
                  "current"
                ],
                "properties": {
                  "event": {
                    "type": "string"
                  },
                  "current": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "example": {
                "event": "updated.deal",
                "current": {
                  "id": 1,
                  "status": "won"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Receive Piedrive deal's won event",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "503": {
            "description": "Any error while tring to process opportunity",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "An error occurred while trying to retrieve the deal from Pipedrive": {
                    "value": {
                      "statusCode": 503,
                      "error": "Service Unavailable",
                      "message": "An error occurred while trying to retrieve the deal from Pipedrive",
                      "code": 531,
                      "details": {
                        "status": 401,
                        "statusText": "Unauthorized"
                      },
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  },
                  "An error occurred while trying to retrieve the deal's custom fields from Pipedrive": {
                    "value": {
                      "statusCode": 503,
                      "error": "Service Unavailable",
                      "message": "An error occurred while trying to retrieve the deal's custom fields from Pipedrive",
                      "code": 532,
                      "details": {
                        "status": 401,
                        "statusText": "Unauthorized"
                      },
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  },
                  "An error occurred while trying to retrieve the deal's products from Pipedrive": {
                    "value": {
                      "statusCode": 503,
                      "error": "Service Unavailable",
                      "message": "An error occurred while trying to retrieve the deal's products from Pipedrive",
                      "code": 533,
                      "details": {
                        "status": 401,
                        "statusText": "Unauthorized"
                      },
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  },
                  "An error occurred while trying to save the order at Bling": {
                    "value": {
                      "statusCode": 503,
                      "error": "Service Unavailable",
                      "message": "An error occurred while trying to save the order at Bling",
                      "code": 534,
                      "details": {
                        "status": 401,
                        "statusText": "Unauthorized"
                      },
                      "docs": "https://github.com/DiegoVictor/pipedeals#errors-reference"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
  },
  "components": {
    "schemas": {
      "Report": {
        "properties": {
          "_id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "opportunities_url": {
            "type": "string"
          }
        }
      },
      "Error": {
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "docs": {
            "type": "string"
          }
        }
      }
    },
  }
}
